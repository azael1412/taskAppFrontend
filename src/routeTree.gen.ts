/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedLayoutImport } from './routes/protected/_layout'
import { Route as authAuthlayoutImport } from './routes/(auth)/_authlayout'
import { Route as ProtectedLayoutIndexImport } from './routes/protected/_layout/index'
import { Route as authAuthlayoutIndexImport } from './routes/(auth)/_authlayout/index'
import { Route as ProtectedLayoutProfileImport } from './routes/protected/_layout/profile'
import { Route as authAuthlayoutResetPasswordImport } from './routes/(auth)/_authlayout/reset-password'
import { Route as authAuthlayoutForgotPasswordImport } from './routes/(auth)/_authlayout/forgot-password'
import { Route as authAuthlayoutActiveAccountImport } from './routes/(auth)/_authlayout/active-account'
import { Route as ProtectedLayoutUsersIndexImport } from './routes/protected/_layout/users/index'
import { Route as ProtectedLayoutTasksIndexImport } from './routes/protected/_layout/tasks/index'
import { Route as ProtectedLayoutUsersCreateImport } from './routes/protected/_layout/users/create'
import { Route as ProtectedLayoutTasksCreateImport } from './routes/protected/_layout/tasks/create'
import { Route as ProtectedLayoutUsersUserIdShowImport } from './routes/protected/_layout/users/$userId.show'
import { Route as ProtectedLayoutUsersUserIdEditImport } from './routes/protected/_layout/users/$userId.edit'
import { Route as ProtectedLayoutTasksTaskIdShowImport } from './routes/protected/_layout/tasks/$taskId.show'
import { Route as ProtectedLayoutTasksTaskIdEditImport } from './routes/protected/_layout/tasks/$taskId.edit'

// Create Virtual Routes

const ProtectedImport = createFileRoute('/protected')()
const authImport = createFileRoute('/(auth)')()
const HelloWordLazyImport = createFileRoute('/hello-word')()

// Create/Update Routes

const ProtectedRoute = ProtectedImport.update({
  id: '/protected',
  path: '/protected',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const HelloWordLazyRoute = HelloWordLazyImport.update({
  id: '/hello-word',
  path: '/hello-word',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/hello-word.lazy').then((d) => d.Route))

const ProtectedLayoutRoute = ProtectedLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ProtectedRoute,
} as any)

const authAuthlayoutRoute = authAuthlayoutImport.update({
  id: '/_authlayout',
  getParentRoute: () => authRoute,
} as any)

const ProtectedLayoutIndexRoute = ProtectedLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const authAuthlayoutIndexRoute = authAuthlayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => authAuthlayoutRoute,
} as any)

const ProtectedLayoutProfileRoute = ProtectedLayoutProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const authAuthlayoutResetPasswordRoute =
  authAuthlayoutResetPasswordImport.update({
    id: '/reset-password',
    path: '/reset-password',
    getParentRoute: () => authAuthlayoutRoute,
  } as any)

const authAuthlayoutForgotPasswordRoute =
  authAuthlayoutForgotPasswordImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => authAuthlayoutRoute,
  } as any)

const authAuthlayoutActiveAccountRoute =
  authAuthlayoutActiveAccountImport.update({
    id: '/active-account',
    path: '/active-account',
    getParentRoute: () => authAuthlayoutRoute,
  } as any)

const ProtectedLayoutUsersIndexRoute = ProtectedLayoutUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedLayoutTasksIndexRoute = ProtectedLayoutTasksIndexImport.update({
  id: '/tasks/',
  path: '/tasks/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedLayoutUsersCreateRoute = ProtectedLayoutUsersCreateImport.update(
  {
    id: '/users/create',
    path: '/users/create',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any,
)

const ProtectedLayoutTasksCreateRoute = ProtectedLayoutTasksCreateImport.update(
  {
    id: '/tasks/create',
    path: '/tasks/create',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any,
)

const ProtectedLayoutUsersUserIdShowRoute =
  ProtectedLayoutUsersUserIdShowImport.update({
    id: '/users/$userId/show',
    path: '/users/$userId/show',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any)

const ProtectedLayoutUsersUserIdEditRoute =
  ProtectedLayoutUsersUserIdEditImport.update({
    id: '/users/$userId/edit',
    path: '/users/$userId/edit',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any)

const ProtectedLayoutTasksTaskIdShowRoute =
  ProtectedLayoutTasksTaskIdShowImport.update({
    id: '/tasks/$taskId/show',
    path: '/tasks/$taskId/show',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any)

const ProtectedLayoutTasksTaskIdEditRoute =
  ProtectedLayoutTasksTaskIdEditImport.update({
    id: '/tasks/$taskId/edit',
    path: '/tasks/$taskId/edit',
    getParentRoute: () => ProtectedLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/hello-word': {
      id: '/hello-word'
      path: '/hello-word'
      fullPath: '/hello-word'
      preLoaderRoute: typeof HelloWordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_authlayout': {
      id: '/(auth)/_authlayout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthlayoutImport
      parentRoute: typeof authRoute
    }
    '/protected': {
      id: '/protected'
      path: '/protected'
      fullPath: '/protected'
      preLoaderRoute: typeof ProtectedImport
      parentRoute: typeof rootRoute
    }
    '/protected/_layout': {
      id: '/protected/_layout'
      path: '/protected'
      fullPath: '/protected'
      preLoaderRoute: typeof ProtectedLayoutImport
      parentRoute: typeof ProtectedRoute
    }
    '/(auth)/_authlayout/active-account': {
      id: '/(auth)/_authlayout/active-account'
      path: '/active-account'
      fullPath: '/active-account'
      preLoaderRoute: typeof authAuthlayoutActiveAccountImport
      parentRoute: typeof authAuthlayoutImport
    }
    '/(auth)/_authlayout/forgot-password': {
      id: '/(auth)/_authlayout/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authAuthlayoutForgotPasswordImport
      parentRoute: typeof authAuthlayoutImport
    }
    '/(auth)/_authlayout/reset-password': {
      id: '/(auth)/_authlayout/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authAuthlayoutResetPasswordImport
      parentRoute: typeof authAuthlayoutImport
    }
    '/protected/_layout/profile': {
      id: '/protected/_layout/profile'
      path: '/profile'
      fullPath: '/protected/profile'
      preLoaderRoute: typeof ProtectedLayoutProfileImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/(auth)/_authlayout/': {
      id: '/(auth)/_authlayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authAuthlayoutIndexImport
      parentRoute: typeof authAuthlayoutImport
    }
    '/protected/_layout/': {
      id: '/protected/_layout/'
      path: '/'
      fullPath: '/protected/'
      preLoaderRoute: typeof ProtectedLayoutIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/tasks/create': {
      id: '/protected/_layout/tasks/create'
      path: '/tasks/create'
      fullPath: '/protected/tasks/create'
      preLoaderRoute: typeof ProtectedLayoutTasksCreateImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/users/create': {
      id: '/protected/_layout/users/create'
      path: '/users/create'
      fullPath: '/protected/users/create'
      preLoaderRoute: typeof ProtectedLayoutUsersCreateImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/tasks/': {
      id: '/protected/_layout/tasks/'
      path: '/tasks'
      fullPath: '/protected/tasks'
      preLoaderRoute: typeof ProtectedLayoutTasksIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/users/': {
      id: '/protected/_layout/users/'
      path: '/users'
      fullPath: '/protected/users'
      preLoaderRoute: typeof ProtectedLayoutUsersIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/tasks/$taskId/edit': {
      id: '/protected/_layout/tasks/$taskId/edit'
      path: '/tasks/$taskId/edit'
      fullPath: '/protected/tasks/$taskId/edit'
      preLoaderRoute: typeof ProtectedLayoutTasksTaskIdEditImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/tasks/$taskId/show': {
      id: '/protected/_layout/tasks/$taskId/show'
      path: '/tasks/$taskId/show'
      fullPath: '/protected/tasks/$taskId/show'
      preLoaderRoute: typeof ProtectedLayoutTasksTaskIdShowImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/users/$userId/edit': {
      id: '/protected/_layout/users/$userId/edit'
      path: '/users/$userId/edit'
      fullPath: '/protected/users/$userId/edit'
      preLoaderRoute: typeof ProtectedLayoutUsersUserIdEditImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/protected/_layout/users/$userId/show': {
      id: '/protected/_layout/users/$userId/show'
      path: '/users/$userId/show'
      fullPath: '/protected/users/$userId/show'
      preLoaderRoute: typeof ProtectedLayoutUsersUserIdShowImport
      parentRoute: typeof ProtectedLayoutImport
    }
  }
}

// Create and export the route tree

interface authAuthlayoutRouteChildren {
  authAuthlayoutActiveAccountRoute: typeof authAuthlayoutActiveAccountRoute
  authAuthlayoutForgotPasswordRoute: typeof authAuthlayoutForgotPasswordRoute
  authAuthlayoutResetPasswordRoute: typeof authAuthlayoutResetPasswordRoute
  authAuthlayoutIndexRoute: typeof authAuthlayoutIndexRoute
}

const authAuthlayoutRouteChildren: authAuthlayoutRouteChildren = {
  authAuthlayoutActiveAccountRoute: authAuthlayoutActiveAccountRoute,
  authAuthlayoutForgotPasswordRoute: authAuthlayoutForgotPasswordRoute,
  authAuthlayoutResetPasswordRoute: authAuthlayoutResetPasswordRoute,
  authAuthlayoutIndexRoute: authAuthlayoutIndexRoute,
}

const authAuthlayoutRouteWithChildren = authAuthlayoutRoute._addFileChildren(
  authAuthlayoutRouteChildren,
)

interface authRouteChildren {
  authAuthlayoutRoute: typeof authAuthlayoutRouteWithChildren
}

const authRouteChildren: authRouteChildren = {
  authAuthlayoutRoute: authAuthlayoutRouteWithChildren,
}

const authRouteWithChildren = authRoute._addFileChildren(authRouteChildren)

interface ProtectedLayoutRouteChildren {
  ProtectedLayoutProfileRoute: typeof ProtectedLayoutProfileRoute
  ProtectedLayoutIndexRoute: typeof ProtectedLayoutIndexRoute
  ProtectedLayoutTasksCreateRoute: typeof ProtectedLayoutTasksCreateRoute
  ProtectedLayoutUsersCreateRoute: typeof ProtectedLayoutUsersCreateRoute
  ProtectedLayoutTasksIndexRoute: typeof ProtectedLayoutTasksIndexRoute
  ProtectedLayoutUsersIndexRoute: typeof ProtectedLayoutUsersIndexRoute
  ProtectedLayoutTasksTaskIdEditRoute: typeof ProtectedLayoutTasksTaskIdEditRoute
  ProtectedLayoutTasksTaskIdShowRoute: typeof ProtectedLayoutTasksTaskIdShowRoute
  ProtectedLayoutUsersUserIdEditRoute: typeof ProtectedLayoutUsersUserIdEditRoute
  ProtectedLayoutUsersUserIdShowRoute: typeof ProtectedLayoutUsersUserIdShowRoute
}

const ProtectedLayoutRouteChildren: ProtectedLayoutRouteChildren = {
  ProtectedLayoutProfileRoute: ProtectedLayoutProfileRoute,
  ProtectedLayoutIndexRoute: ProtectedLayoutIndexRoute,
  ProtectedLayoutTasksCreateRoute: ProtectedLayoutTasksCreateRoute,
  ProtectedLayoutUsersCreateRoute: ProtectedLayoutUsersCreateRoute,
  ProtectedLayoutTasksIndexRoute: ProtectedLayoutTasksIndexRoute,
  ProtectedLayoutUsersIndexRoute: ProtectedLayoutUsersIndexRoute,
  ProtectedLayoutTasksTaskIdEditRoute: ProtectedLayoutTasksTaskIdEditRoute,
  ProtectedLayoutTasksTaskIdShowRoute: ProtectedLayoutTasksTaskIdShowRoute,
  ProtectedLayoutUsersUserIdEditRoute: ProtectedLayoutUsersUserIdEditRoute,
  ProtectedLayoutUsersUserIdShowRoute: ProtectedLayoutUsersUserIdShowRoute,
}

const ProtectedLayoutRouteWithChildren = ProtectedLayoutRoute._addFileChildren(
  ProtectedLayoutRouteChildren,
)

interface ProtectedRouteChildren {
  ProtectedLayoutRoute: typeof ProtectedLayoutRouteWithChildren
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedLayoutRoute: ProtectedLayoutRouteWithChildren,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/hello-word': typeof HelloWordLazyRoute
  '/': typeof authAuthlayoutIndexRoute
  '/protected': typeof ProtectedLayoutRouteWithChildren
  '/active-account': typeof authAuthlayoutActiveAccountRoute
  '/forgot-password': typeof authAuthlayoutForgotPasswordRoute
  '/reset-password': typeof authAuthlayoutResetPasswordRoute
  '/protected/profile': typeof ProtectedLayoutProfileRoute
  '/protected/': typeof ProtectedLayoutIndexRoute
  '/protected/tasks/create': typeof ProtectedLayoutTasksCreateRoute
  '/protected/users/create': typeof ProtectedLayoutUsersCreateRoute
  '/protected/tasks': typeof ProtectedLayoutTasksIndexRoute
  '/protected/users': typeof ProtectedLayoutUsersIndexRoute
  '/protected/tasks/$taskId/edit': typeof ProtectedLayoutTasksTaskIdEditRoute
  '/protected/tasks/$taskId/show': typeof ProtectedLayoutTasksTaskIdShowRoute
  '/protected/users/$userId/edit': typeof ProtectedLayoutUsersUserIdEditRoute
  '/protected/users/$userId/show': typeof ProtectedLayoutUsersUserIdShowRoute
}

export interface FileRoutesByTo {
  '/hello-word': typeof HelloWordLazyRoute
  '/protected': typeof ProtectedLayoutIndexRoute
  '/active-account': typeof authAuthlayoutActiveAccountRoute
  '/forgot-password': typeof authAuthlayoutForgotPasswordRoute
  '/reset-password': typeof authAuthlayoutResetPasswordRoute
  '/protected/profile': typeof ProtectedLayoutProfileRoute
  '/': typeof authAuthlayoutIndexRoute
  '/protected/tasks/create': typeof ProtectedLayoutTasksCreateRoute
  '/protected/users/create': typeof ProtectedLayoutUsersCreateRoute
  '/protected/tasks': typeof ProtectedLayoutTasksIndexRoute
  '/protected/users': typeof ProtectedLayoutUsersIndexRoute
  '/protected/tasks/$taskId/edit': typeof ProtectedLayoutTasksTaskIdEditRoute
  '/protected/tasks/$taskId/show': typeof ProtectedLayoutTasksTaskIdShowRoute
  '/protected/users/$userId/edit': typeof ProtectedLayoutUsersUserIdEditRoute
  '/protected/users/$userId/show': typeof ProtectedLayoutUsersUserIdShowRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/hello-word': typeof HelloWordLazyRoute
  '/(auth)': typeof authRouteWithChildren
  '/(auth)/_authlayout': typeof authAuthlayoutRouteWithChildren
  '/protected': typeof ProtectedRouteWithChildren
  '/protected/_layout': typeof ProtectedLayoutRouteWithChildren
  '/(auth)/_authlayout/active-account': typeof authAuthlayoutActiveAccountRoute
  '/(auth)/_authlayout/forgot-password': typeof authAuthlayoutForgotPasswordRoute
  '/(auth)/_authlayout/reset-password': typeof authAuthlayoutResetPasswordRoute
  '/protected/_layout/profile': typeof ProtectedLayoutProfileRoute
  '/(auth)/_authlayout/': typeof authAuthlayoutIndexRoute
  '/protected/_layout/': typeof ProtectedLayoutIndexRoute
  '/protected/_layout/tasks/create': typeof ProtectedLayoutTasksCreateRoute
  '/protected/_layout/users/create': typeof ProtectedLayoutUsersCreateRoute
  '/protected/_layout/tasks/': typeof ProtectedLayoutTasksIndexRoute
  '/protected/_layout/users/': typeof ProtectedLayoutUsersIndexRoute
  '/protected/_layout/tasks/$taskId/edit': typeof ProtectedLayoutTasksTaskIdEditRoute
  '/protected/_layout/tasks/$taskId/show': typeof ProtectedLayoutTasksTaskIdShowRoute
  '/protected/_layout/users/$userId/edit': typeof ProtectedLayoutUsersUserIdEditRoute
  '/protected/_layout/users/$userId/show': typeof ProtectedLayoutUsersUserIdShowRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/hello-word'
    | '/'
    | '/protected'
    | '/active-account'
    | '/forgot-password'
    | '/reset-password'
    | '/protected/profile'
    | '/protected/'
    | '/protected/tasks/create'
    | '/protected/users/create'
    | '/protected/tasks'
    | '/protected/users'
    | '/protected/tasks/$taskId/edit'
    | '/protected/tasks/$taskId/show'
    | '/protected/users/$userId/edit'
    | '/protected/users/$userId/show'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/hello-word'
    | '/protected'
    | '/active-account'
    | '/forgot-password'
    | '/reset-password'
    | '/protected/profile'
    | '/'
    | '/protected/tasks/create'
    | '/protected/users/create'
    | '/protected/tasks'
    | '/protected/users'
    | '/protected/tasks/$taskId/edit'
    | '/protected/tasks/$taskId/show'
    | '/protected/users/$userId/edit'
    | '/protected/users/$userId/show'
  id:
    | '__root__'
    | '/hello-word'
    | '/(auth)'
    | '/(auth)/_authlayout'
    | '/protected'
    | '/protected/_layout'
    | '/(auth)/_authlayout/active-account'
    | '/(auth)/_authlayout/forgot-password'
    | '/(auth)/_authlayout/reset-password'
    | '/protected/_layout/profile'
    | '/(auth)/_authlayout/'
    | '/protected/_layout/'
    | '/protected/_layout/tasks/create'
    | '/protected/_layout/users/create'
    | '/protected/_layout/tasks/'
    | '/protected/_layout/users/'
    | '/protected/_layout/tasks/$taskId/edit'
    | '/protected/_layout/tasks/$taskId/show'
    | '/protected/_layout/users/$userId/edit'
    | '/protected/_layout/users/$userId/show'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  HelloWordLazyRoute: typeof HelloWordLazyRoute
  authRoute: typeof authRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  HelloWordLazyRoute: HelloWordLazyRoute,
  authRoute: authRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/hello-word",
        "/(auth)",
        "/protected"
      ]
    },
    "/hello-word": {
      "filePath": "hello-word.lazy.tsx"
    },
    "/(auth)": {
      "filePath": "(auth)",
      "children": [
        "/(auth)/_authlayout"
      ]
    },
    "/(auth)/_authlayout": {
      "filePath": "(auth)/_authlayout.tsx",
      "parent": "/(auth)",
      "children": [
        "/(auth)/_authlayout/active-account",
        "/(auth)/_authlayout/forgot-password",
        "/(auth)/_authlayout/reset-password",
        "/(auth)/_authlayout/"
      ]
    },
    "/protected": {
      "filePath": "protected",
      "children": [
        "/protected/_layout"
      ]
    },
    "/protected/_layout": {
      "filePath": "protected/_layout.tsx",
      "parent": "/protected",
      "children": [
        "/protected/_layout/profile",
        "/protected/_layout/",
        "/protected/_layout/tasks/create",
        "/protected/_layout/users/create",
        "/protected/_layout/tasks/",
        "/protected/_layout/users/",
        "/protected/_layout/tasks/$taskId/edit",
        "/protected/_layout/tasks/$taskId/show",
        "/protected/_layout/users/$userId/edit",
        "/protected/_layout/users/$userId/show"
      ]
    },
    "/(auth)/_authlayout/active-account": {
      "filePath": "(auth)/_authlayout/active-account.tsx",
      "parent": "/(auth)/_authlayout"
    },
    "/(auth)/_authlayout/forgot-password": {
      "filePath": "(auth)/_authlayout/forgot-password.tsx",
      "parent": "/(auth)/_authlayout"
    },
    "/(auth)/_authlayout/reset-password": {
      "filePath": "(auth)/_authlayout/reset-password.tsx",
      "parent": "/(auth)/_authlayout"
    },
    "/protected/_layout/profile": {
      "filePath": "protected/_layout/profile.tsx",
      "parent": "/protected/_layout"
    },
    "/(auth)/_authlayout/": {
      "filePath": "(auth)/_authlayout/index.tsx",
      "parent": "/(auth)/_authlayout"
    },
    "/protected/_layout/": {
      "filePath": "protected/_layout/index.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/tasks/create": {
      "filePath": "protected/_layout/tasks/create.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/users/create": {
      "filePath": "protected/_layout/users/create.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/tasks/": {
      "filePath": "protected/_layout/tasks/index.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/users/": {
      "filePath": "protected/_layout/users/index.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/tasks/$taskId/edit": {
      "filePath": "protected/_layout/tasks/$taskId.edit.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/tasks/$taskId/show": {
      "filePath": "protected/_layout/tasks/$taskId.show.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/users/$userId/edit": {
      "filePath": "protected/_layout/users/$userId.edit.tsx",
      "parent": "/protected/_layout"
    },
    "/protected/_layout/users/$userId/show": {
      "filePath": "protected/_layout/users/$userId.show.tsx",
      "parent": "/protected/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
